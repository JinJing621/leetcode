{\rtf1\ansi\ansicpg936\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /**\
 * Definition for singly-linked list.\
 * public class ListNode \{\
 *     int val;\
 *     ListNode next;\
 *     ListNode(int x) \{ val = x; \}\
 * \}\
 */\
class Solution \{\
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) \{\
        ListNode head = new ListNode(0);\
        ListNode tail = head;\
        int c = 0;\
        while(l1.next != null || l2.next != null)\{\
            head.val = (c + l1.val + l2.val) % 10;\
            c = (c + l1.val + l2.val) / 10;\
            l1 = l1.next == null ? new ListNode(0) : l1.next;\
            l2 = l2.next == null ? new ListNode(0) : l2.next;\
            head.next = new ListNode(0);\
            head = head.next;\
        \}\
        head.val = (c + l1.val + l2.val) % 10;\
        c = (c + l1.val + l2.val) / 10;\
        if(c != 0)\{\
            head.next = new ListNode(c);\
            head = head.next;\
        \}\
        return tail;\
    \}\
\}}